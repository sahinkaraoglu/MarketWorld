@using MarketWorld.Web.Areas.Admin.Models.Panel
@model List<UserViewModel>
@{
    ViewData["Title"] = "Kullanıcı Yönetimi";
}

<div class="container-fluid mt-4">
    <div class="card shadow-sm">
        <div class="card-header bg-white py-3 d-flex justify-content-between align-items-center">
            <h4 class="mb-0 text-primary">
                <i class="bi bi-people me-2"></i>Kullanıcı Yönetimi
            </h4>
            <a href="@Url.Action("Create", "User", new { area = "Admin" })" class="btn btn-primary">
                <i class="bi bi-person-plus me-2"></i>Yeni Kullanıcı
            </a>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover align-middle">
                    <thead class="table-light">
                        <tr>
                            <th>Kullanıcı Adı</th>
                            <th>Email</th>
                            <th>Ad</th>
                            <th>Soyad</th>
                            <th>Rol</th>
                            <th>Durum</th>
                            <th>Kayıt Tarihi</th>
                            <th class="text-end">İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="avatar-circle me-2">
                                            @(user.FirstName?.FirstOrDefault() ?? user.Username.FirstOrDefault())
                                        </div>
                                        <span>@user.Username</span>
                                    </div>
                                </td>
                                <td>@user.Email</td>
                                <td>@user.FirstName</td>
                                <td>@user.LastName</td>
                                <td>
                                    <span class="badge bg-info">@user.Role</span>
                                </td>
                                <td>
                                    @if (user.IsActive)
                                    {
                                        <span class="badge bg-success">Aktif</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Pasif</span>
                                    }
                                </td>
                                <td>@user.RegistrationDate?.ToString("dd.MM.yyyy HH:mm")</td>
                                <td>
                                    <div class="d-flex justify-content-end gap-2">
                                        <a href="@Url.Action("Edit", "User", new { area = "Admin", id = user.Id })" 
                                           class="btn btn-sm btn-warning" 
                                           data-bs-toggle="tooltip" 
                                           title="Düzenle">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button type="button" 
                                                class="btn btn-sm btn-danger delete-user" 
                                                data-id="@user.Id"
                                                data-bs-toggle="tooltip"
                                                title="Sil">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<style>
    .card {
        border: none;
        border-radius: 10px;
    }

    .card-header {
        border-bottom: 1px solid rgba(0,0,0,.125);
    }

    .table > :not(caption) > * > * {
        padding: 1rem;
    }

    .table thead th {
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.75rem;
        letter-spacing: 0.5px;
    }

    .avatar-circle {
        width: 32px;
        height: 32px;
        background: linear-gradient(135deg, #4e73df, #224abe);
        color: white;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        font-size: 0.875rem;
    }

    .badge {
        padding: 0.5em 0.75em;
        font-weight: 500;
    }

    .btn {
        padding: 0.5rem 0.75rem;
        font-size: 0.875rem;
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(78, 115, 223, 0.05);
    }

    .delete-user {
        transition: all 0.2s ease;
    }

    .delete-user:hover {
        transform: scale(1.1);
    }

    .btn-warning {
        background-color: #f6c23e;
        border-color: #f6c23e;
        color: #fff;
    }

    .btn-warning:hover {
        background-color: #dda20a;
        border-color: #dda20a;
        color: #fff;
    }

    .btn-danger {
        background-color: #e74a3b;
        border-color: #e74a3b;
    }

    .btn-danger:hover {
        background-color: #be3529;
        border-color: #be3529;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function() {
            // Tooltip'leri etkinleştir
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl)
            });

            $('.delete-user').on('click', function() {
                var userId = $(this).data('id');
                var username = $(this).closest('tr').find('td:first-child span').text();
                
                Swal.fire({
                    title: 'Emin misiniz?',
                    text: `"${username}" kullanıcısını silmek istediğinizden emin misiniz?`,
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#e74a3b',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Evet, sil!',
                    cancelButtonText: 'İptal',
                    reverseButtons: true
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: '@Url.Action("Delete", "User", new { area = "Admin" })/' + userId,
                            type: 'POST',
                            success: function(response) {
                                if (response.success) {
                                    Swal.fire({
                                        title: 'Başarılı!',
                                        text: 'Kullanıcı başarıyla silindi.',
                                        icon: 'success',
                                        confirmButtonColor: '#4e73df'
                                    }).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Hata!',
                                        text: response.message || 'Bir hata oluştu!',
                                        icon: 'error',
                                        confirmButtonColor: '#4e73df'
                                    });
                                }
                            },
                            error: function() {
                                Swal.fire({
                                    title: 'Hata!',
                                    text: 'Bir hata oluştu!',
                                    icon: 'error',
                                    confirmButtonColor: '#4e73df'
                                });
                            }
                        });
                    }
                });
            });
        });
    </script>
}
