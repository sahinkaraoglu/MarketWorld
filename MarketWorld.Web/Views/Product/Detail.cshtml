@using MarketWorld.Web.Models
@model ProductDetailViewModel

@{
    ViewData["Title"] = Model.Name;
}

@section Styles {
    <link rel="stylesheet" href="~/css/Product/product-detail.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
}

@section Scripts {
    <script src="~/js/product-detail.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const cartToast = new bootstrap.Toast(document.getElementById('cartToast'));
            
            document.getElementById('addToCartBtn').addEventListener('click', function() {
                // Sepete ekleme işlemi burada yapılacak
                cartToast.show();
            });
        });
    </script>
}

<div class="container py-4">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Ana Sayfa</a></li>
            <li class="breadcrumb-item"><a href="#">@Model.CategoryName</a></li>
            <li class="breadcrumb-item"><a href="/telefonlar">@Model.SubCategoryName</a></li>
            <li class="breadcrumb-item active">@Model.Name</li>
        </ol>
    </nav>

    <div class="row">
        <div class="col-md-6">
            <div class="product-images">
                <div class="main-image mb-3">
                    <img src="@Model.Images.FirstOrDefault()" class="img-fluid" alt="@Model.Name"
                         onerror="this.src='/img/default-product.jpg';" />
                </div>
                <div class="thumbnail-images">
                    @foreach (var image in Model.Images)
                    {
                        <div class="thumbnail">
                            <img src="@image" alt="@Model.Name" class="img-fluid"
                                 onerror="this.src='/img/default-product.jpg';" />
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Sağ Taraf - Ürün Bilgileri -->
        <div class="col-md-6">
            <div class="product-info">
                <h1 class="product-title text-start">
                    <span class="brand-name text-primary d-block">@Model.BrandName</span>
                    <span class="product-name">@Model.Name</span>
                </h1>

                <div class="product-description mb-4">
                    <p class="text-muted">@Model.Description</p>
                </div>

                <!-- Değerlendirme -->
                <div class="product-rating mb-4">
                    <div class="stars d-flex align-items-center">
                        @for (int i = 1; i <= 5; i++)
                        {
                            if (i <= Model.Rating)
                            {
                                <i class="fas fa-star text-warning"></i>
                            }
                            else if (i - Model.Rating < 1)
                            {
                                <i class="fas fa-star-half-alt text-warning"></i>
                            }
                            else
                            {
                                <i class="far fa-star text-warning"></i>
                            }
                        }
                        <span class="rating-value ms-2">@Model.Rating</span>
                        <span class="review-count text-muted ms-2">(@Model.ReviewCount Değerlendirme)</span>
                    </div>
                </div>

                <!-- Fiyat -->
                <div class="product-price mb-4">
                    @if (Model.HasDiscount && Model.DiscountPrice.HasValue)
                    {
                        <div class="d-flex align-items-center gap-3">
                            <div class="discounted-price h3 mb-0">@Model.DiscountPrice.Value.ToString("N2") TL</div>
                            <div class="original-price text-decoration-line-through text-muted">@Model.Price.ToString("N2") TL</div>
                            <div class="discount-badge bg-danger text-white px-2 py-1 rounded">
                                %@(((Model.Price - Model.DiscountPrice.Value) / Model.Price * 100).ToString("N0")) İndirim
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="current-price h3 mb-0">@Model.Price.ToString("N2") TL</div>
                    }
                </div>

                <!-- Kargo Bilgisi -->
                @if (Model.HasFreeShipping)
                {
                    <div class="shipping-info mb-4">
                        <div class="free-shipping d-flex align-items-center p-3 rounded border">
                            <i class="fas fa-truck-fast me-3 text-primary"></i>
                            <div>
                                <div class="shipping-title">BUGÜN KARGODA</div>
                                <div class="shipping-info-text">23:59'a kadar verdiğiniz siparişler aynı gün kargolanır</div>
                            </div>
                        </div>
                    </div>
                }

                <!-- Stok Bilgisi -->
                @if (Model.GetTotalStock() > 0)
                {
                    <div class="stock-info mb-4">
                        <div class="d-flex align-items-center text-success">
                            <i class="fas fa-check-circle me-2"></i>
                            <span>Stokta @Model.GetTotalStock() adet mevcut</span>
                        </div>
                    </div>
                }
                else
                {
                    <div class="stock-info mb-4">
                        <div class="d-flex align-items-center text-danger">
                            <i class="fas fa-times-circle me-2"></i>
                            <span>Stokta ürün kalmadı</span>
                        </div>
                    </div>
                }

                <!-- Ürün Seçenekleri -->
                <div class="product-options mb-4">
                    <!-- Renk Seçenekleri -->
                    <div class="mb-4">
                        <div class="option-title mb-3">
                            <span class="fw-semibold">Renk:</span>
                            <span id="selectedColor" class="selected-value ms-2">@Model.ColorOptions.FirstOrDefault()?.Value</span>
                        </div>
                        <div class="color-options">
                            @foreach (var color in Model.ColorOptions)
                            {
                                <div class="color-option-wrapper">
                                    <input type="radio" 
                                           class="btn-check" 
                                           name="colorOption" 
                                           id="color_@color.Id" 
                                           value="@color.Value"
                                           @(color.IsSelected ? "checked" : "")
                                           @(color.Stock <= 0 ? "disabled" : "")>
                                    <label class="color-option @(color.Stock <= 0 ? "disabled" : "")" 
                                           for="color_@color.Id">
                                        <div class="d-flex flex-column align-items-center">
                                            <span class="color-name mb-1">@color.Value</span>
                                            @if (color.Stock <= 0)
                                            {
                                                <small class="text-danger">Stokta Yok</small>
                                            }
                                        </div>
                                    </label>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- Hafıza Seçenekleri -->
                    <div class="mb-4">
                      @*   <div class="option-title mb-3">
                            <span class="fw-semibold">Dahili Hafıza:</span>
                            <span id="selectedMemory" class="selected-value ms-2">@Model.MemoryOptions.FirstOrDefault()?.Value</span>
                        </div> *@
                        <div class="memory-options">
                            @foreach (var memory in Model.MemoryOptions)
                            {
                                <div class="memory-option-wrapper">
                                    <input type="radio" 
                                           class="btn-check" 
                                           name="memoryOption" 
                                           id="memory_@memory.Id" 
                                           value="@memory.Value"
                                           @(memory.IsSelected ? "checked" : "")
                                           @(memory.Stock <= 0 ? "disabled" : "")>
                                    <label class="memory-option @(memory.Stock <= 0 ? "disabled" : "")" 
                                           for="memory_@memory.Id">
                                        <div class="d-flex flex-column align-items-center">
                                            <span class="memory-size">@memory.Value</span>
                                            @if (memory.Stock <= 0)
                                            {
                                                <small class="text-danger">Stokta Yok</small>
                                            }
                                        </div>
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- Adet ve Sepete Ekle -->
                <div class="product-actions">
                    @if (Model.GetTotalStock() > 0)
                    {
                        <div class="quantity-selector mb-3">
                            <label class="form-label text-muted small">Adet</label>
                            <div class="input-group input-group-sm" style="width: 100px;">
                                <button class="btn btn-outline-secondary" type="button" id="decreaseQuantity">
                                    <i class="fas fa-minus small"></i>
                                </button>
                                <input type="number" class="form-control text-center" value="1" min="1" max="@Model.GetTotalStock()" id="quantity">
                                <button class="btn btn-outline-secondary" type="button" id="increaseQuantity">
                                    <i class="fas fa-plus small"></i>
                                </button>
                            </div>
                        </div>

                        <div class="d-flex gap-2">
                            <button class="btn btn-primary flex-grow-1" id="addToCartBtn" data-product-id="@Model.Id">
                                <i class="fas fa-shopping-cart me-2"></i>
                                Sepete Ekle
                            </button>
                            <button class="btn btn-outline-secondary" title="Favorilere Ekle">
                                <i class="far fa-heart"></i>
                            </button>
                        </div>
                    }
                    else
                    {
                        <button class="btn btn-soft-danger w-100" disabled>
                            <i class="fas fa-times-circle me-2"></i>
                            Stokta Yok
                        </button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.option-title {
    font-size: 1rem;
}

.selected-value {
    color: #0d6efd;
    font-weight: 500;
}

.color-options, .memory-options {
    display: flex;
    gap: 0.75rem;
    flex-wrap: wrap;
}

.color-option, .memory-option {
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 100px;
    padding: 0.75rem 1rem;
    border: 2px solid #dee2e6;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s ease;
    background-color: white;
}

.color-option:hover:not(.disabled),
.memory-option:hover:not(.disabled) {
    border-color: #0d6efd;
    background-color: #f8f9fa;
}

.color-option.disabled,
.memory-option.disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background-color: #f8f9fa;
}

.btn-check:checked + .color-option,
.btn-check:checked + .memory-option {
    border-color: #0d6efd;
    background-color: #e7f1ff;
}

.color-name, .memory-size {
    font-weight: 500;
    font-size: 0.9rem;
}

small.text-danger {
    font-size: 0.75rem;
    margin-top: 0.25rem;
}

.free-shipping {
    background-color: #f8f9fa;
    transition: all 0.2s ease;
}

.free-shipping:hover {
    background-color: #fff;
    border-color: #0d6efd !important;
}

.free-shipping i {
    font-size: 1.5rem;
}

.shipping-title {
    font-size: 0.8rem;
    font-weight: 600;
    color: #0d6efd;
    letter-spacing: 0.5px;
}

.shipping-info-text {
    font-size: 0.85rem;
    color: #6c757d;
    margin-top: 2px;
}
</style>

<!-- Toast Bildirimi -->
<div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="cartToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="toast-header">
            <i class="fas fa-check-circle text-success me-2"></i>
            <strong class="me-auto">Başarılı</strong>
            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
        <div class="toast-body">
            Ürün sepete eklendi!
        </div>
    </div>
</div> 