@model List<MarketWorld.Web.Models.ProductViewModel> 

@{
    ViewData["Title"] = Model.FirstOrDefault()?.CategoryName;
    var brands = ViewBag.Brands as List<MarketWorld.Domain.Entities.Brand> ?? new List<MarketWorld.Domain.Entities.Brand>();
}

@section Styles {
   <link rel="stylesheet" href="~/css/product.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css">
}

<div class="container py-3">
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb product-breadcrumb">
            <li class="breadcrumb-item"><a href="/">Ana Sayfa</a></li>
            @if (ViewBag.SearchQuery != null)
            {
                <li class="breadcrumb-item active">Arama Sonuçları: "@ViewBag.SearchQuery"</li>
            }
            else
            {
                <li class="breadcrumb-item"><a href="#">@Model.FirstOrDefault()?.CategoryName</a></li>
            }
        </ol>
    </nav>

    <div class="container-fluid py-4">
        <div class="row">
            <!-- Filtreler -->
            <div class="col-md-3">
                <div class="card filter-card">
                    <div class="card-body">
                        <h5 class="card-title mb-4">Filtreler</h5>
                        
                        <!-- Fiyat Aralığı -->
                        <div class="filter-section">
                            <h6 class="filter-section-title">Fiyat Aralığı</h6>
                            <div class="input-group mb-3">
                                <input type="number" class="form-control" placeholder="Min" id="minPrice">
                                <input type="number" class="form-control" placeholder="Max" id="maxPrice">
                            </div>
                        </div>

                        <!-- Markalar -->
                        <div class="filter-section brand-filter">
                            <h6 class="filter-section-title">Markalar</h6>
                            @if (brands.Any())
                            {
                                foreach (var brand in brands)
                                {
                                    <div class="form-check">
                                        <input class="form-check-input" type="checkbox" value="@brand.Id" id="brand@(brand.Id)">
                                        <label class="form-check-label" for="brand@(brand.Id)">@brand.Name</label>
                                    </div>
                                }
                            }
                            else 
                            {
                                <p>Marka bulunamadı</p>
                            }
                        </div>

                        <!-- Değerlendirme -->
                        <div class="filter-section rating-filter">
                            <h6 class="filter-section-title">Değerlendirme</h6>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="5" id="rating5">
                                <label class="form-check-label" for="rating5">
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="4" id="rating4">
                                <label class="form-check-label" for="rating4">
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="3" id="rating3">
                                <label class="form-check-label" for="rating3">
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="2" id="rating2">
                                <label class="form-check-label" for="rating2">
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                </label>
                            </div>
                            <div class="form-check">
                                <input class="form-check-input" type="checkbox" value="1" id="rating1">
                                <label class="form-check-label" for="rating1">
                                    <i class="fas fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                    <i class="far fa-star text-warning"></i>
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-9">
                <div class="row row-cols-1 row-cols-md-3 g-4">
                    @foreach (var product in Model)
                    {
                        <div class="col">
                            <div class="card product-card h-100">
                                <a href="@Url.Action("Detail", "Product", new { id = product.Id })" class="text-decoration-none">
                                    <div class="position-relative">
                                        <img src="@product.ImageUrl" class="card-img-top" alt="@product.Name" 
                                             onerror="this.src='/img/default-product.jpg';" />
                                        <button class="favorite-btn position-absolute top-0 end-0 m-2">
                                            <i class="far fa-heart"></i>
                                        </button>
                                        @if (product.HasFreeShipping)
                                        {
                                            <span class="badge free-shipping-badge position-absolute top-0 start-0 m-2">
                                                <i class="fas fa-truck me-1"></i>ÜCRETSİZ KARGO
                                            </span>
                                        }
                                    </div>
                                    <div class="card-body">
                                        <h6 class="card-subtitle mb-2 text-muted">@product.BrandName</h6>
                                        <h5 class="card-title product-title">@product.Name</h5>
                                        <div class="product-rating mb-2">
                                            <div class="stars d-flex align-items-center">
                                                @{
                                                    decimal rating = product.Rating;
                                                    int fullStars = (int)Math.Floor(rating);
                                                    bool hasHalfStar = (rating - fullStars) >= 0.5m;
                                                }

                                                @for (var i = 1; i <= 5; i++)
                                                {
                                                    if (i <= fullStars)
                                                    {
                                                        <i class="fas fa-star text-warning"></i>
                                                    }
                                                    else if (i == fullStars + 1 && hasHalfStar)
                                                    {
                                                        <i class="fas fa-star-half-alt text-warning"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star text-warning"></i>
                                                    }
                                                }
                                                <span class="rating-value ms-2" style="color: #666; font-weight: 500;">@rating.ToString("0.0")</span>
                                                <span class="review-count text-muted ms-1">(@product.ReviewCount)</span>
                                            </div>
                                        </div>
                                        @if (product.HasDiscount && product.DiscountPrice.HasValue)
                                        {
                                            <div class="d-flex align-items-center gap-2">
                                                <p class="card-text product-price mb-0 fw-bold text-danger" style="font-size: 1.2rem;">
                                                    @product.DiscountPrice.Value.ToString("N2") ₺
                                                </p>
                                                <p class="card-text mb-0 text-decoration-line-through text-muted" style="font-size: 0.9rem;">
                                                    @product.Price.ToString("N2") ₺
                                                </p>
                                            </div>
                                        }
                                        else
                                        {
                                            <p class="card-text product-price">@product.Price.ToString("N2") ₺</p>
                                        }
                                    </div>
                                    <div class="card-footer bg-transparent border-top-0">
                                        <button class="btn btn-primary w-100">Sepete Ekle</button>
                                    </div>
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <p></p>
            <p></p>
            <p></p>
            <p></p>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            function applyPriceFilter() {
                const minPrice = parseFloat($('#minPrice').val()) || 0;
                const maxPrice = parseFloat($('#maxPrice').val()) || Infinity;
                
                $('.product-card').each(function() {
                    const productPriceText = $(this).find('.product-price').text();
                    const productPrice = parseFloat(productPriceText.replace('₺', '').replace('.', '').trim());
                    
                    const priceInRange = productPrice >= minPrice && (maxPrice === Infinity || productPrice <= maxPrice);
                    
                    // Diğer filtrelerle birlikte çalışması için görünürlük durumunu kontrol et
                    const isVisibleByOtherFilters = $(this).parent().is(':visible') || 
                        (!$('.brand-filter input[type="checkbox"]:checked').length && 
                         !$('.rating-filter input[type="checkbox"]:checked').length);
                    
                    $(this).parent().toggle(priceInRange && isVisibleByOtherFilters);
                });
            }
            
            $('#minPrice, #maxPrice').on('input', applyPriceFilter);
            
            // Marka checkbox'larına olay dinleyicisi ekle
            $('.brand-filter input[type="checkbox"]').on('change', function() {
                applyBrandFilter();
            });
            
            // Değerlendirme checkbox'larına olay dinleyicisi ekle
            $('.rating-filter input[type="checkbox"]').on('change', function() {
                applyRatingFilter();
            });
            
            function applyBrandFilter() {
                // Seçilen markaları al
                const selectedBrands = $('.brand-filter input[type="checkbox"]:checked').map(function() {
                    return $(this).val();
                }).get();
                
                // Ürünleri filtrele
                $('.product-card').each(function() {
                    const productBrand = $(this).find('.card-subtitle').text().trim();
                    const shouldShowByBrand = selectedBrands.length === 0 || selectedBrands.some(brandId => {
                        return $(`#brand${brandId}`).next('label').text().trim() === productBrand;
                    });
                    
                    // Diğer filtrelerle birlikte çalışması için görünürlük durumunu güncelle
                    const currentVisibility = $(this).parent().is(':visible');
                    const shouldShowByRating = $('.rating-filter input[type="checkbox"]:checked').length === 0 || 
                                              isVisibleByRatingFilter($(this));
                    
                    $(this).parent().toggle(shouldShowByBrand && shouldShowByRating);
                });
                
                applyPriceFilter();
            }
            
            function applyRatingFilter() {
                // Seçilen değerlendirmeleri al
                const selectedRatings = $('.rating-filter input[type="checkbox"]:checked').map(function() {
                    return parseInt($(this).val());
                }).get();
                
                // Ürünleri filtrele
                $('.product-card').each(function() {
                    const shouldShowByRating = isVisibleByRatingFilter($(this));
                    
                    // Diğer filtrelerle birlikte çalışması için görünürlük durumunu güncelle
                    const shouldShowByBrand = $('.brand-filter input[type="checkbox"]:checked').length === 0 || 
                                             isVisibleByBrandFilter($(this));
                    
                    $(this).parent().toggle(shouldShowByRating && shouldShowByBrand);
                });
                
                applyPriceFilter();
            }
            
            function isVisibleByRatingFilter(productCard) {
                const selectedRatings = $('.rating-filter input[type="checkbox"]:checked').map(function() {
                    return parseInt($(this).val());
                }).get();
                
                if (selectedRatings.length === 0) {
                    return true;
                }
                
                const productRating = productCard.find('.fas.fa-star.text-warning').length;
                return selectedRatings.includes(productRating);
            }
            
            function isVisibleByBrandFilter(productCard) {
                const selectedBrands = $('.brand-filter input[type="checkbox"]:checked').map(function() {
                    return $(this).val();
                }).get();
                
                if (selectedBrands.length === 0) {
                    return true;
                }
                
                const productBrand = productCard.find('.card-subtitle').text().trim();
                return selectedBrands.some(brandId => {
                    return $(`#brand${brandId}`).next('label').text().trim() === productBrand;
                });
            }
        });
    </script>
} 