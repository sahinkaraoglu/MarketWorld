// <auto-generated />
using System;
using MarketWorld.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MarketWorld.Infrastructure.Migrations
{
    [DbContext(typeof(MarketWorldDbContext))]
    [Migration("20250225203529_HomePc")]
    partial class HomePc
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MarketWorld.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Elektronik ürünler, bilgisayarlar, telefonlar ve diğer teknolojik cihazlar",
                            Name = "Elektronik"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Erkek, kadın ve çocuk giyim ürünleri ve aksesuarları",
                            Name = "Giyim & Aksesuar"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ev dekorasyon, mobilya, mutfak eşyaları ve ev tekstili",
                            Name = "Ev & Yaşam"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kozmetik ürünleri, parfümler ve kişisel bakım ürünleri",
                            Name = "Kozmetik & Kişisel Bakım"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Spor ekipmanları, spor giyim ve outdoor aktivite ürünleri",
                            Name = "Spor & Outdoor"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Dizüstü, masaüstü bilgisayarlar ve tabletler",
                            Name = "Bilgisayarlar & Tabletler",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yazıcılar, tarayıcılar ve projeksiyon cihazları",
                            Name = "Yazıcılar & Projeksiyon",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Akıllı telefonlar ve aksesuarları",
                            Name = "Telefonlar",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Buzdolabı, çamaşır makinesi ve diğer beyaz eşyalar",
                            Name = "Beyaz Eşya",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Klimalar, ısıtıcılar ve hava temizleyiciler",
                            Name = "Klima ve Isıtıcılar",
                            ParentId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kadın, erkek ve çocuk ayakkabıları, çantalar ve aksesuarlar",
                            Name = "Ayakkabı & Çanta",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kadın giyim ürünleri, elbiseler, üst giyim ve alt giyim",
                            Name = "Kadın Giyim",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Erkek giyim ürünleri, takım elbiseler, üst giyim ve alt giyim",
                            Name = "Erkek Giyim",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kız ve erkek çocuk giyim ürünleri",
                            Name = "Çocuk Giyim",
                            ParentId = 2
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Oturma grupları, yatak odası, yemek odası ve ofis mobilyaları",
                            Name = "Mobilya",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Nevresim takımları, perdeler, halılar ve dekoratif tekstil ürünleri",
                            Name = "Ev Tekstili",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Ev dekorasyon ürünleri, tablolar, aynalar ve aydınlatma sistemleri",
                            Name = "Dekorasyon & Aydınlatma",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Pişirme, servis ve saklama ürünleri, mutfak aletleri",
                            Name = "Mutfak Gereçleri",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Banyo aksesuarları, temizlik ve düzenleme ürünleri",
                            Name = "Banyo & Ev Gereçleri",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kırtasiye malzemeleri, ofis gereçleri ve okul ürünleri",
                            Name = "Kırtasiye & Ofis",
                            ParentId = 3
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kadın ve erkek parfümleri, deodorantlar ve vücut spreyleri",
                            Name = "Parfüm & Deodarant",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Saç bakım ve şekillendirme ürünleri",
                            Name = "Saç Şekillendirme",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yüz ve vücut bakım ürünleri, kremler ve serumlar",
                            Name = "Cilt Bakımı",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Renkli kozmetik ve makyaj malzemeleri",
                            Name = "Makyaj",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Vitamin, takviye gıdalar ve medikal ürünler",
                            Name = "Sağlık & Medikal Ürünler",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Diş bakım ürünleri ve ağız bakım ürünleri",
                            Name = "Ağız & Diş Bakımı",
                            ParentId = 4
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Fitness ekipmanları, kondisyon aletleri ve aksesuarları",
                            Name = "Fitness & Kondisyon",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Spor giyim ürünleri, spor ayakkabılar ve aksesuarlar",
                            Name = "Spor Giyim & Ayakkabı",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kamp malzemeleri, outdoor giyim ve ekipmanlar",
                            Name = "Outdoor & Kamp",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Kayak ekipmanları ve kış sporları malzemeleri",
                            Name = "Kış Sporları",
                            ParentId = 5
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Yüzme ve su sporları ekipmanları",
                            Name = "Su Sporları",
                            ParentId = 5
                        });
                });

            modelBuilder.Entity("MarketWorld.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("MarketWorld.Domain.Entities.Category", b =>
                {
                    b.HasOne("MarketWorld.Domain.Entities.Category", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("MarketWorld.Domain.Entities.Product", b =>
                {
                    b.HasOne("MarketWorld.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("MarketWorld.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
